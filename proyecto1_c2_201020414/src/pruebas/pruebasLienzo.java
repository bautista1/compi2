/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pruebas;


import DibujarFigura.*;
import Logica.*;
import arbol.*;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Point;
import java.awt.ScrollPane;
import java.io.*;
import java.util.*;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.event.CaretEvent;
import javax.swing.event.CaretListener;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.text.BadLocationException;
import javax.swing.text.Document;
import pruebas.LineNr;

/**
 *
 * @author Alberth
 */
public class pruebasLienzo extends javax.swing.JFrame {

    int contLineas=1;
    int fila=0;
    int col=0;
    int posAbs=0;
                        
    JTextArea Texto;
    
    //JPanel panelito;
    public JTextArea edicion;
    public JScrollPane scrollPane;
    public JTextArea temporal;
     LineNr nr;
    int valorTiempo=100;
    int indiceDePestanha=0;
    
    //todo para el editor en su funcionamiento
    JFileChooser Ventana =  new JFileChooser(System.getProperty("user.dir")); //buscador de archivos
    String contenidoArchivo="";
    String path = ""; //Path
    HashMap<Integer,String> listaDeArchivosAbiertos = new HashMap<Integer,String>();
    int indexPT=0;
    //fin de todo lo usado
    
    //variables usadas para que funcione el guardar
        String texto="";
    //termina seccion guardar
    
        //para compilar
            static Analizador1.proyecto  calc=null;
        //termina compilar
    private int contador;
    
    /**
     * Creates new form pruebasLienzo
     */
    public pruebasLienzo() {
        initComponents();
        
        valorTiempo=100;
        indexPT=0;
        texto="";
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jSeparator7 = new javax.swing.JSeparator();
        jFrame1 = new javax.swing.JFrame();
        jFrame2 = new javax.swing.JFrame();
        jFrame3 = new javax.swing.JFrame();
        jFrame4 = new javax.swing.JFrame();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        btnNewEyelash = new javax.swing.JButton();
        lblLiniaColumna = new javax.swing.JLabel();
        btnEjecutar = new javax.swing.JButton();
        btnDebuggear = new javax.swing.JButton();
        sliderTiempo = new javax.swing.JSlider();
        btnMostrarErrores = new javax.swing.JButton();
        jSeparator9 = new javax.swing.JSeparator();
        btnCapturarTexto = new javax.swing.JButton();
        btnNueva = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        menuCrear = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        menuAbrir = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        menuGuardar = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        menuGuardarComo = new javax.swing.JMenuItem();
        jSeparator5 = new javax.swing.JPopupMenu.Separator();
        menuSalir = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        menuEjecutar = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        menuDebuggear = new javax.swing.JMenuItem();
        jSeparator6 = new javax.swing.JPopupMenu.Separator();
        menuVelocidad = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        menuError = new javax.swing.JMenuItem();
        jSeparator8 = new javax.swing.JPopupMenu.Separator();
        menuTablaSimbolo = new javax.swing.JMenuItem();

        jMenuItem1.setText("jMenuItem1");

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame2Layout = new javax.swing.GroupLayout(jFrame2.getContentPane());
        jFrame2.getContentPane().setLayout(jFrame2Layout);
        jFrame2Layout.setHorizontalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame2Layout.setVerticalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame3Layout = new javax.swing.GroupLayout(jFrame3.getContentPane());
        jFrame3.getContentPane().setLayout(jFrame3Layout);
        jFrame3Layout.setHorizontalGroup(
            jFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame3Layout.setVerticalGroup(
            jFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame4Layout = new javax.swing.GroupLayout(jFrame4.getContentPane());
        jFrame4.getContentPane().setLayout(jFrame4Layout);
        jFrame4Layout.setHorizontalGroup(
            jFrame4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame4Layout.setVerticalGroup(
            jFrame4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jTabbedPane1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jTabbedPane1PropertyChange(evt);
            }
        });

        jInternalFrame1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jInternalFrame1.setTitle("nanana");
        jInternalFrame1.setToolTipText("");
        jInternalFrame1.setVisible(true);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("tab1", jInternalFrame1);

        jPanel1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jPanel1KeyTyped(evt);
            }
        });

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane3.setViewportView(jTextArea2);

        jTextArea3.setColumns(20);
        jTextArea3.setRows(5);
        jScrollPane4.setViewportView(jTextArea3);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(141, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(69, 69, 69))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(76, 76, 76))
        );

        jTabbedPane1.addTab("tab2", jPanel1);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jScrollPane2.setViewportView(jTextPane1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(166, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(92, 92, 92)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane1))
                .addContainerGap(98, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("tab3", jPanel2);

        btnNewEyelash.setText("Agregar Pestaña");
        btnNewEyelash.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewEyelashActionPerformed(evt);
            }
        });

        lblLiniaColumna.setText("-- | --");

        btnEjecutar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/DibujarFigura/ejecutar.png"))); // NOI18N
        btnEjecutar.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                btnEjecutarMouseMoved(evt);
            }
        });
        btnEjecutar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEjecutarActionPerformed(evt);
            }
        });

        btnDebuggear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/DibujarFigura/debug2.png"))); // NOI18N
        btnDebuggear.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                btnDebuggearMouseMoved(evt);
            }
        });

        sliderTiempo.setMaximum(10000);
        sliderTiempo.setMinimum(10);
        sliderTiempo.setPaintLabels(true);
        sliderTiempo.setPaintTicks(true);
        sliderTiempo.setValue(100);
        sliderTiempo.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderTiempoStateChanged(evt);
            }
        });
        sliderTiempo.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                sliderTiempoMouseMoved(evt);
            }
        });

        btnMostrarErrores.setIcon(new javax.swing.ImageIcon(getClass().getResource("/DibujarFigura/reporte.png"))); // NOI18N
        btnMostrarErrores.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                btnMostrarErroresMouseMoved(evt);
            }
        });

        btnCapturarTexto.setText("Capturar");
        btnCapturarTexto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapturarTextoActionPerformed(evt);
            }
        });

        btnNueva.setText("nuevaVentana");
        btnNueva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevaActionPerformed(evt);
            }
        });

        jMenu3.setText("Archivo");

        menuCrear.setText("Crear");
        menuCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuCrearActionPerformed(evt);
            }
        });
        jMenu3.add(menuCrear);
        jMenu3.add(jSeparator2);

        menuAbrir.setText("Abrir");
        menuAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuAbrirActionPerformed(evt);
            }
        });
        jMenu3.add(menuAbrir);
        jMenu3.add(jSeparator3);

        menuGuardar.setText("Guardar");
        menuGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuGuardarActionPerformed(evt);
            }
        });
        jMenu3.add(menuGuardar);
        jMenu3.add(jSeparator4);

        menuGuardarComo.setText("Guardar Como");
        menuGuardarComo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuGuardarComoActionPerformed(evt);
            }
        });
        jMenu3.add(menuGuardarComo);
        jMenu3.add(jSeparator5);

        menuSalir.setText("Salir");
        menuSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSalirActionPerformed(evt);
            }
        });
        jMenu3.add(menuSalir);

        jMenuBar1.add(jMenu3);

        jMenu4.setText("Herramientas");

        menuEjecutar.setText("Ejecutar");
        menuEjecutar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuEjecutarActionPerformed(evt);
            }
        });
        jMenu4.add(menuEjecutar);
        jMenu4.add(jSeparator1);

        menuDebuggear.setText("Debuggear");
        menuDebuggear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuDebuggearActionPerformed(evt);
            }
        });
        jMenu4.add(menuDebuggear);
        jMenu4.add(jSeparator6);

        menuVelocidad.setText("Velocidad");
        jMenu4.add(menuVelocidad);

        jMenuBar1.add(jMenu4);

        jMenu1.setText("Mostrar");

        menuError.setText("Errores");
        menuError.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuErrorActionPerformed(evt);
            }
        });
        jMenu1.add(menuError);
        jMenu1.add(jSeparator8);

        menuTablaSimbolo.setText("Tabla Simbolos");
        menuTablaSimbolo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuTablaSimboloActionPerformed(evt);
            }
        });
        jMenu1.add(menuTablaSimbolo);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator9)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTabbedPane1)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnNewEyelash)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnNueva)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCapturarTexto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblLiniaColumna)
                        .addGap(54, 54, 54))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnEjecutar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnDebuggear, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(sliderTiempo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnMostrarErrores, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnEjecutar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnDebuggear, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addGap(17, 17, 17))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnMostrarErrores)
                            .addComponent(sliderTiempo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(jSeparator9, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnNewEyelash)
                        .addComponent(btnCapturarTexto)
                        .addComponent(btnNueva))
                    .addComponent(lblLiniaColumna))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNewEyelashActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewEyelashActionPerformed
        mostrarArchivosAbiertos(listaDeArchivosAbiertos);
    }//GEN-LAST:event_btnNewEyelashActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
       
        
    }//GEN-LAST:event_formWindowOpened

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
                indiceDePestanha=jTabbedPane1.getSelectedIndex();
    }//GEN-LAST:event_formWindowActivated

    private void menuGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuGuardarActionPerformed
       guardarArchivo();
    }//GEN-LAST:event_menuGuardarActionPerformed

    private void btnEjecutarMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEjecutarMouseMoved
                this.btnEjecutar.setToolTipText("Ejecutar");
    }//GEN-LAST:event_btnEjecutarMouseMoved

    private void btnDebuggearMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDebuggearMouseMoved
       this.btnDebuggear.setToolTipText("Debuggear");
    }//GEN-LAST:event_btnDebuggearMouseMoved

    private void btnMostrarErroresMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMostrarErroresMouseMoved
        this.btnMostrarErrores.setToolTipText("Mostrar Errores");
    }//GEN-LAST:event_btnMostrarErroresMouseMoved

    private void sliderTiempoMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sliderTiempoMouseMoved
        this.sliderTiempo.setToolTipText("Estoy en: "+valorTiempo+" ms");
    }//GEN-LAST:event_sliderTiempoMouseMoved

    private void sliderTiempoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliderTiempoStateChanged
        valorTiempo=sliderTiempo.getValue();
    }//GEN-LAST:event_sliderTiempoStateChanged

    private void btnCapturarTextoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapturarTextoActionPerformed
                indiceDePestanha=jTabbedPane1.getSelectedIndex();
        JTextArea encontro=ObtenerAreaTexto();
        System.out.println("-----inicio texto----\n"+encontro.getText() +"\n-----fin texto---------");
        System.out.println("Pestaña seleccionada "+jTabbedPane1.getSelectedIndex());
    }//GEN-LAST:event_btnCapturarTextoActionPerformed

    private void menuCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuCrearActionPerformed
        crearNuevaPestanha();
    }//GEN-LAST:event_menuCrearActionPerformed

    private void menuAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuAbrirActionPerformed
        indexPT=jTabbedPane1.getSelectedIndex();
        abrirArchivo();
         
    }//GEN-LAST:event_menuAbrirActionPerformed

    private void menuGuardarComoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuGuardarComoActionPerformed
       guardarArchivoComo();
    }//GEN-LAST:event_menuGuardarComoActionPerformed

    private void menuSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuSalirActionPerformed
       this.dispose();
    }//GEN-LAST:event_menuSalirActionPerformed

    private void menuErrorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuErrorActionPerformed
         LienzoDibujo ld = new LienzoDibujo(this, true, "C:\\Users\\Alberth\\pruebas compi2\\prueba17082016");
        
        ld.dibujarOvalo(100, 100,50,100,"BA3519", 1);
        ld.dibujarRectangulo(200, 200,50,100,"BA3519", 1);
        ld.dibujarTexto("holita",100, 100,"BA3519");
        ld.dibujarPunto(300, 300,"BA3519",50, 1);
        ld.setVisible(true);
    }//GEN-LAST:event_menuErrorActionPerformed

    private void menuEjecutarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuEjecutarActionPerformed
            compilar();
    }//GEN-LAST:event_menuEjecutarActionPerformed

    private void btnEjecutarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEjecutarActionPerformed
        compilar();
    }//GEN-LAST:event_btnEjecutarActionPerformed

    private void btnNuevaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevaActionPerformed

        JPanel tabA = new JPanel();
		JTextPane jTextPane2 = new JTextPane();
        tabA.setPreferredSize( new Dimension(100,100) );
        tabA.setLayout( new BorderLayout() );  
        Texto = new JTextArea();
        JScrollPane scroll = new JScrollPane(Texto);
		
		Texto.setColumns(20);
        Texto.setRows(5);
        scroll.setViewportView(Texto);
		
        jTextPane2.setForeground(new java.awt.Color(0, 102, 153));
        jTextPane2.setEnabled(false);
        scroll.setViewportView(jTextPane2);
		
        tabA.add(scroll, BorderLayout.CENTER);              
        contador = contador +1;
        this.jTabbedPane1.addTab("Tab No. "+String.valueOf(contador), tabA);   
		PanelLines(Texto, jTextPane2,  scroll);
        
                for(int c=0;c<350;c++){
                    System.out.println(c);
                }
                
    }//GEN-LAST:event_btnNuevaActionPerformed

    private void menuTablaSimboloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuTablaSimboloActionPerformed
        crearPestanhaLinea();
    }//GEN-LAST:event_menuTablaSimboloActionPerformed

    private void menuDebuggearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuDebuggearActionPerformed
        JPanel frame=new JPanel();
  frame.setLayout(new BorderLayout());
    final LineNr nr = new LineNr ();
    frame.add (nr, BorderLayout.WEST);
    frame.add (nr.scrollPan, BorderLayout.CENTER);
    jTabbedPane1.addTab("nuevo", frame);
    }//GEN-LAST:event_menuDebuggearActionPerformed

    private void jPanel1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPanel1KeyTyped
       
    }//GEN-LAST:event_jPanel1KeyTyped

    private void jTabbedPane1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1PropertyChange
        
    }//GEN-LAST:event_jTabbedPane1PropertyChange

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(pruebasLienzo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(pruebasLienzo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(pruebasLienzo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(pruebasLienzo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new pruebasLienzo().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCapturarTexto;
    private javax.swing.JButton btnDebuggear;
    private javax.swing.JButton btnEjecutar;
    private javax.swing.JButton btnMostrarErrores;
    private javax.swing.JButton btnNewEyelash;
    private javax.swing.JButton btnNueva;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JFrame jFrame2;
    private javax.swing.JFrame jFrame3;
    private javax.swing.JFrame jFrame4;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JPopupMenu.Separator jSeparator5;
    private javax.swing.JPopupMenu.Separator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JPopupMenu.Separator jSeparator8;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JLabel lblLiniaColumna;
    private javax.swing.JMenuItem menuAbrir;
    private javax.swing.JMenuItem menuCrear;
    private javax.swing.JMenuItem menuDebuggear;
    private javax.swing.JMenuItem menuEjecutar;
    private javax.swing.JMenuItem menuError;
    private javax.swing.JMenuItem menuGuardar;
    private javax.swing.JMenuItem menuGuardarComo;
    private javax.swing.JMenuItem menuSalir;
    private javax.swing.JMenuItem menuTablaSimbolo;
    private javax.swing.JMenuItem menuVelocidad;
    private javax.swing.JSlider sliderTiempo;
    // End of variables declaration//GEN-END:variables

  private void crearNuevaPestanha(){
   
             JPanel frame=new JPanel();

  frame.setLayout(new BorderLayout());
    final LineNr nr = new LineNr ();
    frame.add (nr, BorderLayout.WEST);
    frame.add (nr.scrollPan, BorderLayout.CENTER);
    jTabbedPane1.addTab("nuevo", frame);
   
  }          
    public void crearPestanhaLinea(){
        JInternalFrame frame = new JInternalFrame ();
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.getContentPane ().setLayout (new BorderLayout ());
    final LineNr nr = new LineNr ();
    frame.getContentPane ().add (nr, BorderLayout.WEST);
    frame.getContentPane ().add (nr.scrollPan, BorderLayout.CENTER);
    
    jTabbedPane1.addTab("nuevo", frame);
    }
    
    
void fiCol(final JTextArea re) {
    //jTextArea2.addCaretListener(new CaretListener(){
    re.addCaretListener(new CaretListener(){
        @Override
    public void caretUpdate(CaretEvent ching){
            try {
                //int posAbs=jTextArea2.getCaretPosition();//toma la posicion absoluta de la letra encontrada
                     posAbs=re.getCaretPosition();//.getCaretPosition();//toma la posicion absoluta de la letra encontrada
                        //int fila=jTextArea2.getLineOfOffset(posAbs);//encuentra la fila donde se encuentra
                         fila=re.getLineOfOffset(posAbs);//encuentra la fila donde se encuentra
                       // int col=posAbs-jTextArea2.getLineStartOffset(fila);//muestra en pantalla columna y fila de ubicacion de la letra
                          col=posAbs-re.getLineStartOffset(fila);//muestra en pantalla columna y fila de ubicacion de la letra
                        lblLiniaColumna.setText("Col: " +col+"|"+"Fil "+fila);//muestra en pantalla columna y fila de ubicacion de la letra
            } catch (BadLocationException ex) {
                Logger.getLogger(pruebasLienzo.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        });
}
 
 public JTextArea ObtenerAreaTexto(){
     JPanel ma=(JPanel) jTabbedPane1.getComponent(indiceDePestanha);
JScrollPane jsp = (JScrollPane) ma.getComponent(1);
JTextArea jta=(JTextArea)jsp.getViewport().getComponent(0);
return jta;
}   

 public void abrirArchivo(){
         abrirArFil(".lz","Lz","LZ"); 
            edicion=new JTextArea();
    
        String nombre=retornoNombreArchivo(path);
        
        Boolean comprovarSiGuardo=guardarProducto(indexPT+1,path,listaDeArchivosAbiertos);
        
        if(comprovarSiGuardo){
//            edicion.getDocument().insertString(0, "", null);
//            jTabbedPane1.addTab(nombre,new JScrollPane(edicion));
            JPanel frame=new JPanel();

  frame.setLayout(new BorderLayout());
     nr = new LineNr ();
    frame.add (nr, BorderLayout.WEST);
    frame.add (nr.scrollPan, BorderLayout.CENTER);
    
    jTabbedPane1.addTab(nombre, frame);
            filtro(path);
        }else{
            JOptionPane.showMessageDialog( rootPane, "No se puede introducir el archivo. El nombre esta repetido.", "Error archivo repetido.", JOptionPane.WARNING_MESSAGE); //Mensaje por si se prduce un error
        }
            
        
   
    

 }
         
 void abrirArFil(String forma1,String forma2,String forma3){
     Ventana.setAcceptAllFileFilterUsed(false); //elimino la opción "todos los archivos
     FileNameExtensionFilter ext = new FileNameExtensionFilter(forma1,forma2,forma3); //Le indico que busque solamente archivos con extensión .LFO
     System.out.println("Entro en abrir");
     Ventana.setFileFilter(ext);
     filtro(forma1,forma2,forma3);
} 
 
       
void filtro (String forma1,String forma2, String forma3){
    Ventana.setAcceptAllFileFilterUsed(false); //elimino la opción "todos los archivos
FileNameExtensionFilter beirut = new FileNameExtensionFilter(forma1, forma2, forma3); //Le indico que busque solamente archivos con extensión .practlfp
Ventana.setFileFilter(beirut); //le agrego el componente.
int kaiserChiefs = Ventana.showOpenDialog(this); //reconocerá la opción escogida por el usuario.

if(kaiserChiefs == JFileChooser.APPROVE_OPTION) //validación "OK".
{ //INICIO IF
try { //INICIO TRY
path = Ventana.getSelectedFile().getAbsolutePath(); //Obtengo path.
}catch (Exception e){   
}
}
}

    public void filtro(String patito){
contenidoArchivo="";
FileReader arcticMonkeys = null; //Lector.
BufferedReader coldplay = null; //Buffer.
String arcadeFire = ""; //Texto leído.
String brightEyes = ""; //Path
nr.agregarTexto("");
//edicion.setText(""); //limpio la caja de texto.
//edicion.setEditable(true); //permito que el usuario la pueda editar.

try { //INICIO TRY
brightEyes = patito;//franzFerdinand.getSelectedFile().getAbsolutePath(); //Obtengo path.

if(new File(brightEyes).exists()) { //Verifico si el fichero existe.


arcticMonkeys = new FileReader(brightEyes/*animalCollective*/); //Leera el fichero.
coldplay = new BufferedReader(arcticMonkeys); //Almacenara contenido de fichero.

try { //INICIO TRY

while((arcadeFire = coldplay.readLine())!=null) //Leo linea por linea.
{ //INICIO WHILE
contenidoArchivo+=arcadeFire+"\n";
} //FIN WHILE
nr.agregarTexto(contenidoArchivo);
//edicion.setText(contenidoArchivo);
} //FIN TRY

catch (IOException ex)
{ //INICIO CATCH
//Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex); //Manejo de excepciones.
} // FIN CATCH
} //FIN IF

else
{ //INICIO ELSE
JOptionPane.showMessageDialog(rootPane, "El archivo seleccionado puede estar dañado", "Error en lectura", JOptionPane.ERROR_MESSAGE); //Mensaje por si se prduce un error
} // FIN ELSE

} //FIN TRY

catch (FileNotFoundException ex)
{ //INICIO CATCH
//Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex); //Manejo de excepciones.
} //FIN CATCH

finally { //INICIO FINALLY

try { //INICIO TRY
if (null != coldplay) //Validación archivo.
coldplay.close(); //Cerrar archivo.
} //FIN TRY

catch (IOException ex)
{ //INICIO CATCH
//Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex); //Manejo de excepciones.
} //FIN CATCH

} //FIN FINALLY
}

    
    public String retornoNombreArchivo(String path){
         File pr=new File(path);
    return pr.getName();
    }
            
    public Boolean guardarProducto(int pos, String path, HashMap <Integer,String> listaArchivosAbiertos){
//    if (listaArchivosAbiertos.containsKey(pos)){
//        System.out.println("No se puede introducir el producto. El nombre esta repetido.");
//        return false;
//    }
//    else{
        listaArchivosAbiertos.put(pos, path);               
        return true;
//    }
}
    
    public  void mostrarArchivosAbiertos(HashMap<Integer, String> listaProductos){
    int clave;
    Iterator<Integer> productos = listaProductos.keySet().iterator();
    System.out.println("Hay los siguientes productos:");
    String s="";
    while(productos.hasNext()){
        clave = productos.next();
        System.out.println(clave + " - " + listaProductos.get(clave));
    }        
}
    
    public String devolverPathArchivoAbierto(int index,HashMap<Integer, String> listaProductos){
         int clave;
        Iterator<Integer> productos = listaProductos.keySet().iterator();
    System.out.println("Hay los siguientes productos:");
    String s="No_existe-1";
    while(productos.hasNext()){
        clave = productos.next();
        if(index==clave){
            s=listaProductos.get(index);
            System.out.println("Archivo encontrado --> "+clave + " - " + listaProductos.get(clave));
        }
    }   
    return s;
    }
    
    
    public void guardarArchivo(){
         indiceDePestanha=jTabbedPane1.getSelectedIndex();        
        String path=jTabbedPane1.getTitleAt(indiceDePestanha);

        if(path.equalsIgnoreCase("nuevo")){
            guardarArchivoComo();
        }else{
            
            JTextArea encontro=ObtenerAreaTexto();
            String pathTemporal=devolverPathArchivoAbierto(indiceDePestanha,listaDeArchivosAbiertos);
            if(pathTemporal.equalsIgnoreCase("no_existe-1")){
                
            }else{
                Guardar(pathTemporal,encontro);
            }
            
        }
            
        
        
    }
    
     void Guardar (String path,JTextArea roma) //Guardar el TextArea
{       texto=roma.getText();
        try{
            PrintWriter ouPt=new PrintWriter(new FileWriter(path));
            ouPt.println(texto);
            ouPt.close();
        }catch(IOException e){
            System.out.println(e);
        }
}
     
     public void guardarArchivoComo(){
          try {
         guardarComo();
         indexPT=jTabbedPane1.getSelectedIndex();
         Boolean comprovarSiGuardo=guardarProducto(indexPT+1,path,listaDeArchivosAbiertos);
         if(comprovarSiGuardo){
             JOptionPane.showMessageDialog( rootPane, "Archivo Almacenado exitosamente.", "Guardar Como.", JOptionPane.WARNING_MESSAGE); //Mensaje por si se prduce un error
         }else{
             JOptionPane.showMessageDialog( rootPane, "No se puede introducir el archivo. El nombre esta repetido.", "Error archivo repetido.", JOptionPane.WARNING_MESSAGE); //Mensaje por si se prduce un error
         }
         jTabbedPane1.setTitleAt(indexPT,retornoNombreArchivo(path)+".lz" );
             
     } catch (Exception ex) {
         Logger.getLogger(pruebasLienzo.class.getName()).log(Level.SEVERE, null, ex);
     }
     }
     
         
public void guardarComo() throws Exception{
  
//String nombre = "";
//JFileChooser Ventana=new JFileChooser(System.getProperty("user.dir"));
Ventana.showSaveDialog(this);
File GUARDAR =Ventana.getSelectedFile();
path = Ventana.getSelectedFile().getAbsolutePath(); //Obtengo path.
if(!GUARDAR.exists())
{
//nombre=Ventana.getSelectedFile().getName();
    
FileWriter GUARDADO=new FileWriter(GUARDAR+".lz");      
         
        edicion.getDocument().insertString(0, "", null);
        //jTabbedPane14.addTab(Jtreevar,new JScrollPane(textPa));
         GUARDADO.write(edicion.getText());
         GUARDADO.close();
                
                

}else
{
    int n=JOptionPane.showConfirmDialog(null,"El archivo ya existe desea reemplazarlo");
    if(n==JOptionPane.YES_OPTION){
       
          PrintWriter ouPt=new PrintWriter(new FileWriter(GUARDAR));
          edicion.getDocument().insertString(0, "", null);
                
                    ouPt.write(edicion.getText());
                    ouPt.close();
                
    }
}
} 


     public void compilar(){
                        String tex="";
     tex = edicion.getText();
        
        String sentence = tex;//txtEntrada.getText();
        
        Graphviz dibujo=new Graphviz();
        NodoArbol arbol;
        InputStream is = new ByteArrayInputStream(sentence.getBytes());
        if(calc == null) calc = new Analizador1.proyecto(is);
        else calc.ReInit(is);
        try
        {
            arbol=calc.Programa();
            dibujo.dibujarArbol(arbol);
            Semantico pasada1=new Semantico();
            // pasada1.dibujarArbol(declaracion);
            pasada1.evaluar_Declaracion(arbol);

            int x=1;
            while(x<5){
                System.out.println(x);
                x=x*2;
            }
            //txtAreaOut.setText(Integer.toString(res));

        }
        catch (Exception e)
        {
            //txtAreaOut.setText("error in expression.\n"+ e.getMessage());
            System.out.println("Error en expresion.\n"+e.getMessage());
        }
        catch (Error e)
        {
            //txtAreaOut.setText("error in expression.\n"+ e.getMessage());
            System.out.println("Error en expresion.\n"+e.getMessage());
        }
        finally
        {}       

            }
     
     
 public void PanelLines(final JTextArea texto, final JTextPane linea, JScrollPane scroll) {

        texto.getDocument().addDocumentListener(new DocumentListener() {
            public String getText() {
                int posicion = texto.getDocument().getLength();
                javax.swing.text.Element ruta = texto.getDocument().getDefaultRootElement();
                String text = "1" + System.getProperty("line.separator");
                for (int i = 2; i < ruta.getElementIndex(posicion) + 2; i++) {
                    text += i + System.getProperty("line.separator");
                }
                return text;
            }
            @Override
            public void changedUpdate(DocumentEvent de) {
                linea.setText(getText());
            }

            @Override
            public void insertUpdate(DocumentEvent de) {
                linea.setText(getText());
            }

            @Override
            public void removeUpdate(DocumentEvent de) {
                linea.setText(getText());
            }

        
        });
        scroll.getViewport().add(texto);
        scroll.setRowHeaderView(linea);

    }
   
  
      
}// no tocar
