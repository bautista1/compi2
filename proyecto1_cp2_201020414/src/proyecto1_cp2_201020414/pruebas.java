/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto1_cp2_201020414;
import Graphik.AnalizadorG1.GAnalizador1;
import arbol.Graphviz;
import arbol.NodoArbol;
import javax.swing.*;
import javax.swing.text.*;
import java.awt.Color;
import java.io.ByteArrayInputStream;
import java.io.InputStream;
import java.io.Reader;
import java.io.StringReader;
import Graphik.AnalizadorG1.*;
import Logica.*;
/**
 *
 * @author Alberth
 */
public class pruebas extends javax.swing.JFrame {

/**
     * Creates new form pruebas
     */
    public pruebas() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        txtEntrada = new javax.swing.JTextPane();
        btnPintar = new javax.swing.JToggleButton();
        btnCompilarPrueba = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane1.setViewportView(txtEntrada);

        btnPintar.setText("pintar");
        btnPintar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPintarActionPerformed(evt);
            }
        });

        btnCompilarPrueba.setText("Compilar");
        btnCompilarPrueba.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCompilarPruebaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(132, 132, 132)
                        .addComponent(btnPintar)
                        .addGap(18, 18, 18)
                        .addComponent(btnCompilarPrueba)))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPintar)
                    .addComponent(btnCompilarPrueba))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPintarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPintarActionPerformed
        JTextPaneExample();
    }//GEN-LAST:event_btnPintarActionPerformed

    private void btnCompilarPruebaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCompilarPruebaActionPerformed
        compilarCod(txtEntrada.getText());
    }//GEN-LAST:event_btnCompilarPruebaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(pruebas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(pruebas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(pruebas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(pruebas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new pruebas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCompilarPrueba;
    private javax.swing.JToggleButton btnPintar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextPane txtEntrada;
    // End of variables declaration//GEN-END:variables



public void JTextPaneExample(){
try {
String s = "Hola mundo, saludos";
StyleContext sc = new StyleContext();


DefaultStyledDocument doc = new DefaultStyledDocument(sc);
JTextPane pane = new JTextPane(doc);

doc.insertString(0, s, null);

// Define el estilo
Style rojo = sc.addStyle("ConstantWidth", null);
StyleConstants.setForeground(rojo, Color.red);

Style verde = sc.addStyle("ConstantWidth", null);
StyleConstants.setForeground(verde, Color.green);

Style azul = sc.addStyle("ConstantWidth", null);
StyleConstants.setForeground(azul, Color.blue);

// Aplica el estilo
doc.setCharacterAttributes(0, 4, rojo, false);
doc.setCharacterAttributes(5, 5, verde, false);
doc.setCharacterAttributes(12, 7, azul, false);

this.getContentPane().add(new JScrollPane(pane));
this.setSize(400, 300);
this.setVisible(true);
} catch (Exception e) {
System.out.println(e.getMessage());
}

}


public void compilarCod(String texto){
    NodoArbol declaracion;
    NodoArbol gramatica;
    NodoArbol codigoS;
    NodoArbol arG;
         // String texto="";
        try {
           // texto=texto;
         //   cosa="<html><head><title>Tokens</title></head><body><center><h1>Tokens</h1><table border=1><tr><th>Cantidad</th><th>Tipo</th><th>Nombre</th></tr>";
           // listaTokens.clear();
            //listaNoTerminales.clear();
             Reader reader = new StringReader(texto);
            GAnalizador1  scanner = new GAnalizador1(reader);
//            tabla_Errores=scanner.tabla_Errores;
            
            sinG parser = new sinG(scanner);
            parser.parse();
            
            //mostrarErrores(tabla_Errores);
            
             declaracion = parser.declaracionG;
             gramatica = parser.gramaticaG;
             codigoS = parser.codigoG;
             arG=parser.raizG;
             Semantico pasada1=new Semantico();
            // pasada1.dibujarArbol(declaracion);
             pasada1.dibujarArbol(arG);
            //tabla_Errores=parser.tabla_Errores;
            
            //mostrarErrores(tabla_Errores);
            //Semantico dibujar=new Semantico();
             //esto tiene que venir despues 
//            semantico_color_bit dibujo=new semantico_color_bit();
 //          
       
       
        } catch (Exception ex) {
            //Logger.getLogger(ventanaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("Ocurrio un error "+ex.getMessage());
        }
}//termina






}//
